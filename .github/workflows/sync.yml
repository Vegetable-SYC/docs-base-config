name: Multi-Repo Sync
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Parse Config
        id: config
        run: |
          CONFIG=$(cat repos-config.json | jq -c . | sed 's/"/\\"/g')
          echo "config={\"data\":\"$CONFIG\"}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Trigger Updates
        uses: actions/github-script@v6
        env:
          PAT: ${{ secrets.CROSS_REPO_PAT }}
        with:
          script: |
            const { Octokit } = require('@octokit/rest');
            const nodeFetch = require('node-fetch');
            const config = JSON.parse('${{ steps.config.outputs.config }}');

            const octokit = new Octokit({
              auth: process.env.PAT,
              request: { fetch: nodeFetch }
            });

            for (const { repo, branch } of config.repos) {
              try {
                await octokit.rest.repos.createDispatchEvent({
                  owner: config.username,
                  repo: repo,
                  event_type: "update-config",
                  client_payload: {
                    target_branch: branch
                  }
                });
                console.log(`Triggered ${repo}@${branch}`);
              } catch (error) {
                console.error(`[ERROR] ${repo}:`, error.response?.data || error.message);
                // 继续执行其他仓库的触发
              }
            }